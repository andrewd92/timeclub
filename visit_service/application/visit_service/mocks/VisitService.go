// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// VisitService is an autogenerated mock type for the VisitService type
type VisitService struct {
	mock.Mock
}

// All provides a mock function with given fields: id, dateTime
func (_m *VisitService) All(id int64, dateTime time.Time) ([]interface{}, error) {
	ret := _m.Called(id, dateTime)

	var r0 []interface{}
	if rf, ok := ret.Get(0).(func(int64, time.Time) []interface{}); ok {
		r0 = rf(id, dateTime)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64, time.Time) error); ok {
		r1 = rf(id, dateTime)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Create provides a mock function with given fields: clubId, cardId, dateTime
func (_m *VisitService) Create(clubId int64, cardId int64, dateTime time.Time) (interface{}, error) {
	ret := _m.Called(clubId, cardId, dateTime)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(int64, int64, time.Time) interface{}); ok {
		r0 = rf(clubId, cardId, dateTime)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64, int64, time.Time) error); ok {
		r1 = rf(clubId, cardId, dateTime)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
